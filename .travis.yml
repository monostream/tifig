language: cpp
env:
  global:
    - LINUX_DIST=trusty
    - DEPS_DIR=${TRAVIS_BUILD_DIR}/dep

matrix:
  include:
    - os: linux
      dist: trusty
      sudo: true
      compiler: gcc
      addons:
        apt:
          packages: &trusty_pocl_packages
            - gcc-4.8
            - g++-4.8
            - clang-3.7
            - valgrind
            - pkg-config
          sources: &trusty_pocl_sources
            - ubuntu-toolchain-r-test

    # - os: osx
    #   compiler: gcc

before_install:
  # Install dependencies
    - |
      if [[ ${TRAVIS_OS_NAME} == "linux" ]]; then
        sudo apt-get install -qq -y build-essential pkg-config glib2.0-dev libexpat1-dev liblcms2-dev libjpeg-dev libexif-dev
        sudo apt-get install -qq -y libavcodec-dev libswscale-dev
      elif [[ ${TRAVIS_OS_NAME} == "osx" ]]; then 
        brew update
        brew outdated cmake || brew upgrade cmake
      fi

install:
    - if [ "$CXX" = "clang++" ] && [ "$TRAVIS_OS_NAME" = "linux" ]; then export CXX="clang++-3.7" CC="clang-3.7"; fi
    - echo ${PATH}
    - echo ${CXX}
    - ${CXX} --version
    - ${CXX} -v
          
    - |
      if [[ ${TRAVIS_OS_NAME} == "linux" ]]; then
        CMAKE_URL="http://www.cmake.org/files/v3.5/cmake-3.5.1-Linux-x86_64.tar.gz"
        mkdir -p ${DEPS_DIR}/cmake
        travis_retry wget --no-check-certificate --quiet -O - ${CMAKE_URL} | tar --strip-components=1 -xz -C ${DEPS_DIR}/cmake
        export PATH=${DEPS_DIR}/cmake/bin:${PATH}

        VIPS_URL="https://github.com/jcupitt/libvips/releases/download/v8.5.9/vips-8.5.9.tar.gz"
        travis_retry wget --no-check-certificate --quiet -O - ${VIPS_URL} | tar -xz -C ${TRAVIS_BUILD_DIR}
        cd ${TRAVIS_BUILD_DIR}/vips-8.5.9
        ./configure -s
        make -s
        sudo make install
        cd -

        sudo ldconfig
      elif [[ ${TRAVIS_OS_NAME} == "osx" ]]; then
        brew install libav || brew upgrade libav
        brew install vips || brew upgrade vips
      fi

script:
    ############################################################################
    # Build main and tests
    ############################################################################
     - mkdir -p build
     - cd build
     - cmake .. 
     - make
     - ./tifig -v ../fixtures/1.heic test.jpg

